options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: Custom
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: Example of an OFDM Transmitter
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: tx_ofdm
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: tx_ofdm
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 12.0]
    rotation: 0
    state: enabled

blocks:
- name: fft_len
  id: variable
  parameters:
    comment: ''
    value: '64'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 652.0]
    rotation: 0
    state: enabled
- name: header_formatter
  id: variable
  parameters:
    comment: ''
    value: digital.packet_header_ofdm(occupied_carriers, n_syms=1, len_tag_key=length_tag_key,
      frame_len_tag_key=length_tag_key, bits_per_header_sym=header_mod.bits_per_symbol(),
      bits_per_payload_sym=payload_mod.bits_per_symbol(), scramble_header=False)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 196.0]
    rotation: 0
    state: enabled
- name: header_mod
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_bpsk()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 132.0]
    rotation: 0
    state: enabled
- name: input_file_name
  id: variable
  parameters:
    comment: ''
    value: '"test1.png"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 12.0]
    rotation: 0
    state: enabled
- name: input_file_size
  id: variable
  parameters:
    comment: ''
    value: os.path.getsize(input_file_name)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 76.0]
    rotation: 0
    state: enabled
- name: length_tag_key
  id: variable
  parameters:
    comment: ''
    value: '"packet_len"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [824, 196.0]
    rotation: 0
    state: enabled
- name: occupied_carriers
  id: variable
  parameters:
    comment: ''
    value: (list(range(-26, -21)) + list(range(-20, -7)) + list(range(-6, 0)) + list(range(1,
      7)) + list(range(8, 21)) + list(range(22, 27)),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1360, 788.0]
    rotation: 0
    state: enabled
- name: packet_len
  id: variable
  parameters:
    comment: ''
    value: '20'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 228.0]
    rotation: 0
    state: enabled
- name: payload_mod
  id: variable
  parameters:
    comment: ''
    value: digital.constellation_qpsk()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 132.0]
    rotation: 0
    state: enabled
- name: pilot_carriers
  id: variable
  parameters:
    comment: ''
    value: ((-21, -7, 7, 21,),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1504, 788.0]
    rotation: 0
    state: enabled
- name: pilot_symbols
  id: variable
  parameters:
    comment: ''
    value: ((1, 1, 1, -1,),)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1632, 788.0]
    rotation: 0
    state: enabled
- name: rolloff
  id: variable
  parameters:
    comment: ''
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 692.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '50000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 860.0]
    rotation: 0
    state: enabled
- name: sync_word1
  id: variable
  parameters:
    comment: ''
    value: '[0., 0., 0., 0., 0., 0., 0., 1.41421356, 0., -1.41421356, 0., 1.41421356,
      0., -1.41421356, 0., -1.41421356, 0., -1.41421356, 0., 1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., -1.41421356, 0., -1.41421356, 0., -1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., -1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 1.41421356,
      0., -1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 1.41421356, 0., -1.41421356,
      0., 1.41421356, 0., 1.41421356, 0., 1.41421356, 0., 0., 0., 0., 0., 0.]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1360, 868.0]
    rotation: 0
    state: enabled
- name: sync_word2
  id: variable
  parameters:
    comment: ''
    value: '[0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1,
      1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 0, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1,
      1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 0, 0, 0, 0, 0] '
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1504, 868.0]
    rotation: 0
    state: enabled
- name: analog_random_source_x_0
  id: analog_random_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max: '255'
    maxoutbuf: '0'
    min: '0'
    minoutbuf: '0'
    num_samps: '1000'
    repeat: 'True'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 116.0]
    rotation: 0
    state: disabled
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: input_file_name
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'False'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 228.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: '*0.05'
    const: '0.05'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 948.0]
    rotation: 0
    state: enabled
- name: blocks_repack_bits_bb_0
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: "100->400\n\u6BCF\u4E2A\u8F93\u5165\u76841\u5B57\u8282\u5305\u542B8bits\
      \ \u4FE1\u606F\uFF0C\u6BCF\u4E2A\u8F93\u51FA\u76841\u5B57\u8282\u5305\u542B\
      2bits\u7684\u4FE1\u606F"
    endianness: gr.GR_LSB_FIRST
    k: '8'
    l: payload_mod.bits_per_symbol()
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 340.0]
    rotation: 0
    state: enabled
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: '10'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 444.0]
    rotation: 0
    state: disabled
- name: blocks_stream_mux_0
  id: blocks_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengths: (input_file_size,packet_len-input_file_size%packet_len)
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 288.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_tagged_stream_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: packet_len
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 292.0]
    rotation: 0
    state: enabled
- name: blocks_tag_gate_0
  id: blocks_tag_gate
  parameters:
    affinity: ''
    alias: ''
    comment: "\u4F7F\u7528\u6B64\u5757\u53EF\u4EE5\u963B\u6B62\u6807\u7B7E\u4F20\u64AD"
    maxoutbuf: '0'
    minoutbuf: '0'
    propagate_tags: 'False'
    single_key: '""'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 940.0]
    rotation: 0
    state: enabled
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: packet_len=448
    lengthtagname: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1424, 320.0]
    rotation: 0
    state: enabled
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: "\u8282\u6D41\u9600\uFF0C\u63A7\u5236\u901F\u5EA6"
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 940.0]
    rotation: 0
    state: true
- name: blocks_vector_source_x_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: "\u7814\u7A76\u53D1\u73B0\uFF0C\u53D1\u9001 3840 = 96*40 \uFF0C\n\u5B9E\
      \u9645\u6700\u540E 96 \u5B57\u8282\u6CA1\u6210\u529F"
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'False'
    tags: '[]'
    type: byte
    vector: np.append(np.arange(0,packet_len*2,1) ,np.arange(0,packet_len*2,1))
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 428.0]
    rotation: 0
    state: disabled
- name: blocks_vector_source_x_0_0_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'False'
    tags: '[]'
    type: byte
    vector: np.arange(0,packet_len-input_file_size%packet_len,1)
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 340.0]
    rotation: 0
    state: enabled
- name: digital_chunks_to_symbols_xx_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: header_mod.points()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 288.0]
    rotation: 0
    state: enabled
- name: digital_chunks_to_symbols_xx_0_0
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: payload_mod.points()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 360.0]
    rotation: 0
    state: enabled
- name: digital_crc32_bb_0
  id: digital_crc32_bb
  parameters:
    affinity: ''
    alias: ''
    check: 'False'
    comment: 96+4(CRC32) = 100
    lengthtagname: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    packed: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 284.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_carrier_allocator_cvc_0
  id: digital_ofdm_carrier_allocator_cvc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_len: fft_len
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
    occupied_carriers: occupied_carriers
    output_is_shifted: 'True'
    pilot_carriers: pilot_carriers
    pilot_symbols: pilot_symbols
    sync_words: (sync_word1, sync_word2)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 716.0]
    rotation: 0
    state: enabled
- name: digital_ofdm_cyclic_prefixer_0
  id: digital_ofdm_cyclic_prefixer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    cp_len: fft_len//4
    input_size: fft_len
    maxoutbuf: '0'
    minoutbuf: '0'
    rolloff: rolloff
    tagname: length_tag_key
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 756.0]
    rotation: 0
    state: enabled
- name: digital_packet_headergenerator_bb_0
  id: digital_packet_headergenerator_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    header_formatter: header_formatter.base()
    len_tag_key: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 276.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nfrom gnuradio import digital\n\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n    \"\"\
      \"Embedded Python Block example - a simple multiply const\"\"\"\n    \n    def\
      \ __init__(self, \n                 vectorSize = 64, \n                 header_mod\
      \ = digital.constellation_bpsk(), \n                 payload_mod = digital.constellation_qpsk(),\n\
      \                 debug = False\n                 ): # only default arguments\
      \ here\n        \"\"\"arguments to this function show up as parameters in GRC\"\
      \"\"\n        gr.sync_block.__init__(\n            self,\n            name='Debug\
      \ OFDM Block',   # will show up in GRC\n            in_sig=[(np.complex64,vectorSize)],\n\
      \            out_sig=[(np.complex64,vectorSize)]\n        )\n        # if an\
      \ attribute with the same name as a parameter is found,\n        # a callback\
      \ is registered (properties work, too).\n        self.bpsk_points = header_mod.points()\
      \   # digital.constellation_bpsk().points()\n        self.qpsk_points = payload_mod.points()\
      \  # digital.constellation_qpsk().points()\n        self.debug = debug\n\n \
      \   def work(self, input_items, output_items):\n        output_items[0][:] =\
      \ input_items[0] #port 0\n\n        if self.debug == True:\n            BLACK\
      \ = '\\033[30m'\n            RED = '\\033[31m'\n            GREEN = '\\033[32m'\n\
      \            YELLOW = '\\033[33m'\n            BLUE = '\\033[34m'\n        \
      \    MAGENTA = '\\033[35m'\n            CYAN = '\\033[36m'\n            WHITE\
      \ = '\\033[37m'\n            BG_BLACK = '\\033[40m'\n            BG_RED = '\\\
      033[41m'\n            BG_GREEN = '\\033[42m'\n            BG_YELLOW = '\\033[43m'\n\
      \            BG_BLUE = '\\033[44m'\n            BG_MAGENTA = '\\033[45m'\n \
      \           BG_CYAN = '\\033[46m'\n            BG_WHITE = '\\033[47m'\n    \
      \        RESET = '\\033[0m'\n\n            \"\"\"example: multiply with constant\"\
      \"\"\n            print('\\n-> every channel\\'s datas:(%dx%d)' %(len(input_items[0][0]),len(input_items[0])))\n\
      \n            for offset in range(len(input_items[0][0])):\n               \
      \ if offset in [11,25,39,53]:\n                    color = BG_BLACK+YELLOW\n\
      \                    reset = RESET\n                elif offset in [0,1,2,3,4,5,59,60,61,62,63,32]:\n\
      \                    color = BG_WHITE+RED\n                    reset = RESET\n\
      \                else:\n                    color = BG_GREEN+BLACK\n       \
      \             reset = RESET\n           \n                print(color+\"[%02d]->\"\
      \  %(offset), end = ' ')\n                for vectorIndex in range(len(input_items[0])):\n\
      \                    value = input_items[0][vectorIndex][offset]\n         \
      \           if value in self.qpsk_points:\n                        print('q%d'\
      \ %(self.qpsk_points.index(value)), end = ' ')\n                    elif value\
      \ in self.bpsk_points:\n                        print('b%d' %(self.bpsk_points.index(value)),\
      \ end = ' ')\n                    else:\n                        if value.real\
      \ < -1.4:\n                            print('x-', end = ' ')\n            \
      \            elif value.real > 1.4:\n                            print('x+',\
      \ end = ' ')\n                        else:\n                            print('x0',\
      \ end = ' ')\n                print(reset)\n            #print(len(input_items[0]),len(input_items[0][0]))\n\
      \n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: debug for analy ofdm header
    debug: 'False'
    header_mod: header_mod
    maxoutbuf: '0'
    minoutbuf: '0'
    payload_mod: payload_mod
    vectorSize: fft_len
  states:
    _io_cache: ('Debug OFDM Block', 'blk', [('vectorSize', '64'), ('header_mod', '<gnuradio.digital.digital_python.constellation_bpsk
      object at 0x77bc506211f0>'), ('payload_mod', '<gnuradio.digital.digital_python.constellation_qpsk
      object at 0x77bc506211b0>'), ('debug', 'False')], [('0', 'complex', 64)], [('0',
      'complex', 64)], 'Embedded Python Block example - a simple multiply const',
      ['debug'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 748.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      import pmt\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded\
      \ Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self,\
      \ length_tag_name='', debug=False):  # only default arguments here\n       \
      \ \"\"\"arguments to this function show up as parameters in GRC\"\"\"\n    \
      \    gr.sync_block.__init__(\n                self,\n                name='Debug\
      \ Header Block',   # will show up in GRC\n                in_sig=[np.byte],\n\
      \                out_sig=[]\n                )\n        # if an attribute with\
      \ the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.length_tag_name = length_tag_name\n\
      \        self.debug = debug\n        \n\n    def work(self, input_items, output_items):\n\
      \        if self.debug == True:\n            \"\"\"example: multiply with constant\"\
      \"\"\n            # get all tags associated with input_items[0]\n          \
      \  input_total_len = len(input_items[0])\n            input_offset = self.nitems_read(0)\n\
      \            tag_tuple = self.get_tags_in_window(0, 0, len(input_items[0]))\n\
      \            tag_num = len(tag_tuple)\n            one_tag_data_num = int(input_total_len/tag_num)\n\
      \n            # loop through all 'detect' tags and store their relative offset\n\
      \            print(\"\\none input, input_offset = %08d --> \" %(input_offset))\n\
      \            for tag in tag_tuple:\n                if (pmt.to_python(tag.key)\
      \ == self.length_tag_name):\n                    tag_offset = tag.offset\n \
      \                   tag_relative_offset = tag_offset - input_offset\n\n    \
      \                '''\n                    0-11 bits(12bits\uFF09\uFF1A \u6570\
      \u636E\u5305\u957F\u5EA6\n                    12-23 bits(12bits)\uFF1A\u6807\
      \u5934\u7F16\u53F7\uFF08\u6BCF\u6B21\u8C03\u7528\u8FDB\u884C\u7D2F\u52A0\uFF09\
      \n                    crc8 (8bits)\n                    others (\u8BBE\u7F6E\
      \u4E3A0\uFF09\n                    '''\n                    print(\"data_lsb[%06d/%06d]=[\"\
      \ \n                          %(tag_relative_offset , input_total_len), end\
      \ = '')\n                    for index in range(one_tag_data_num):\n       \
      \                 print(\"%02X\" %(input_items[0][tag_relative_offset+index]),\
      \ end = ' ')\n                        if index == 11: \n                   \
      \         print(\"len|\", end = ' ')\n                        elif index ==\
      \ 23:\n                            print(\"idx|\", end = ' ')\n            \
      \            elif index == 31:\n                            print(\"crc|\",\
      \ end = ' ')\n\n                    print('|other]')\n\n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: debug for analy ofdm header
    debug: 'False'
    length_tag_name: length_tag_key
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Debug Header Block', 'blk', [('length_tag_name', "''"), ('debug',
      'False')], [('0', 'byte', 1)], [], 'Embedded Python Block example - a simple
      multiply const', ['debug', 'length_tag_name'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 196.0]
    rotation: 0
    state: enabled
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_len
    forward: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: ()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 740.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 12.0]
    rotation: 0
    state: enabled
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import os
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 60.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: FFT Plot
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 1020.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Scope Plot
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Scope Plot
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 924.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: bpsk -> header=48
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: (0,0)
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Pre-OFDM-header"'
    nconnections: '1'
    size: 48*3
    srate: '1'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.5'
    ymin: '-1.5'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1424, 196.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_1_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: qpsk-> data=400
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: (0,1)
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Pre-OFDM-data"'
    nconnections: '1'
    size: 400*3
    srate: '1'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '2'
    ymin: '-2'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1424, 404.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Time Domain
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 772.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Pre-OFDM
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1640, 332.0]
    rotation: 0
    state: enabled
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: Tx Signal
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 868.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Pre-OFDM
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 772.0]
    rotation: 0
    state: enabled
- name: virtual_source_0_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Time Domain
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 948.0]
    rotation: 0
    state: enabled
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: Tx Signal
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 860.0]
    rotation: 0
    state: enabled
- name: zeromq_pub_sink_0
  id: zeromq_pub_sink
  parameters:
    address: tcp://127.0.0.1:49203
    affinity: ''
    alias: ''
    comment: USRP sample rate = 768kHz
    hwm: '-1'
    key: ''
    pass_tags: 'False'
    timeout: '100'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1080, 836.0]
    rotation: 0
    state: true

connections:
- [analog_random_source_x_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [blocks_file_source_0, '0', blocks_stream_mux_0, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_tag_gate_0, '0']
- [blocks_repack_bits_bb_0, '0', digital_chunks_to_symbols_xx_0_0, '0']
- [blocks_repeat_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [blocks_stream_mux_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', digital_crc32_bb_0, '0']
- [blocks_tag_gate_0, '0', blocks_throttle2_0, '0']
- [blocks_tagged_stream_mux_0, '0', virtual_sink_0_0_0, '0']
- [blocks_throttle2_0, '0', qtgui_freq_sink_x_0, '0']
- [blocks_throttle2_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_throttle2_0, '0', virtual_sink_1, '0']
- [blocks_vector_source_x_0, '0', blocks_repeat_0, '0']
- [blocks_vector_source_x_0_0_0, '0', blocks_stream_mux_0, '1']
- [digital_chunks_to_symbols_xx_0, '0', blocks_tagged_stream_mux_0, '0']
- [digital_chunks_to_symbols_xx_0, '0', qtgui_time_sink_x_1, '0']
- [digital_chunks_to_symbols_xx_0_0, '0', blocks_tagged_stream_mux_0, '1']
- [digital_chunks_to_symbols_xx_0_0, '0', qtgui_time_sink_x_1_0, '0']
- [digital_crc32_bb_0, '0', blocks_repack_bits_bb_0, '0']
- [digital_crc32_bb_0, '0', digital_packet_headergenerator_bb_0, '0']
- [digital_ofdm_carrier_allocator_cvc_0, '0', epy_block_0, '0']
- [digital_ofdm_cyclic_prefixer_0, '0', virtual_sink_0, '0']
- [digital_packet_headergenerator_bb_0, '0', digital_chunks_to_symbols_xx_0, '0']
- [digital_packet_headergenerator_bb_0, '0', epy_block_1, '0']
- [epy_block_0, '0', fft_vxx_0, '0']
- [fft_vxx_0, '0', digital_ofdm_cyclic_prefixer_0, '0']
- [virtual_source_0_0_0, '0', digital_ofdm_carrier_allocator_cvc_0, '0']
- [virtual_source_0_0_0_0, '0', blocks_multiply_const_vxx_0, '0']
- [virtual_source_1, '0', zeromq_pub_sink_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.11.0
